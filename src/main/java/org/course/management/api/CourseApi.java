package org.course.management.api;import org.course.management.entity.Course;import org.course.management.entity.CourseDetail;import org.course.management.service.CourseService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.HashMap;import java.util.Map;@RestController@RequestMapping("/course-api")public class CourseApi {    @Autowired    private CourseService courseService;    @GetMapping("/getAllCourse")    public ResponseEntity<?> doGetAllCourse() {        Map<String, Object> result = new HashMap<>();        result.put("success", true);        result.put("message", "Call Api Success");        result.put("data", courseService.getAllCourse());        return ResponseEntity.ok(result);    }    @PostMapping("/postCourse")    public ResponseEntity<?> doPostCourse(@RequestBody Course course) {        Map<String, Object> result = new HashMap<>();        try {            result.put("success", true);            result.put("message", "Call Api Success");            result.put("data", courseService.doSaveCourse(course));        } catch (Exception e) {            result.put("success", false);            result.put("message", "Call Api Error");            result.put("data", null);            e.printStackTrace();        }        return ResponseEntity.ok(result);    }    @GetMapping("/getCourseDetailById/{id}")    public ResponseEntity<?> doGetCourseDetailById(@PathVariable int id) {        Map<String, Object> result = new HashMap<>();        try {            //CourseDetail courseDetail = courseDetailService.findById(id);            Course course = courseService.findById(id);            if (course != null) {                result.put("success", true);                result.put("message", "Call Api Success");                result.put("data", course);            } else {                result.put("success", false);                result.put("message", "CourseDetail not found");                result.put("data", null);            }        } catch (Exception e) {            result.put("Error", false);            result.put("message", "Call Api Error");            result.put("data", null);        }        return ResponseEntity.ok(result);    }    @DeleteMapping("/deleteByIdCourse/{id}")    public ResponseEntity<?> doDeleteByIdCourse(@PathVariable int id) {        Map<String, Object> result = new HashMap<>();        try {            result.put("success", true);            result.put("message", "Call Api Success");            courseService.doGetDeleteByIdCourse(id);        } catch (Exception e) {            result.put("Error", false);            result.put("message", "Call Api Error");            result.put("data", null);        }        return ResponseEntity.ok(result);    }}