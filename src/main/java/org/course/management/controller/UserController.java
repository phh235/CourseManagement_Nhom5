package org.course.management.controller;import org.course.management.entity.Course;import org.course.management.repository.RateRepository;import org.course.management.service.CourseService;import org.course.management.service.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import java.util.HashMap;import java.util.List;import java.util.Map;@Controllerpublic class UserController {    @Autowired    private CourseService courseService;    @Autowired    private RateRepository rateRepository;    @GetMapping({"/", "/trang-chinh"})    public String ViewTrangChu(Model model) {        model.addAttribute("currentNav", "/");        return "user/home";    }    @GetMapping("/khoa-hoc")    public String viewKhoaHoc(Model model) {        List<Course> courses = courseService.getAllCourse();        Map<Integer, Integer> totalRatings = new HashMap<>();        Map<Integer, Double> averageRatings = new HashMap<>();        for (Course course : courses) {            int totalRatingCount = rateRepository.findByCourseId(course.getCourseId()).size();            Double averageRating = rateRepository.getAverageStar(course.getCourseId());            totalRatings.put(course.getCourseId(), totalRatingCount);            averageRatings.put(course.getCourseId(), averageRating);        }        model.addAttribute("courses", courses);        model.addAttribute("totalRatings", totalRatings);        model.addAttribute("averageRatings", averageRatings);        model.addAttribute("currentNav", "khoa-hoc");        return "user/course";    }    @GetMapping("/chi-tiet-khoa-hoc/{courseId}")    public String ViewChiTiet(@PathVariable("courseId") Integer id, Model model) {        Course course = courseService.findById(id);        model.addAttribute("course", course);        return "user/course-detail";    }    @GetMapping("/thong-tin-ca-nhan")    public String ViewThongTin() {        return "user/profile";    }    @GetMapping("/video/{courseId}")    public String ViewVideo(@PathVariable("courseId") Integer id, Model model) {        Course course = courseService.findById(id);        model.addAttribute("course", course);        return "user/video-course";    }    @GetMapping("/lien-he")    public String ViewContact(Model model) {        model.addAttribute("currentNav", "lien-he");        return "user/contact";    }    @GetMapping("/faq")    public String ViewFAQ(Model model) {        model.addAttribute("currentNav", "faq");        return "user/faq";    }    @GetMapping({"/404"})    public String View404() {        return "user/404";    }}